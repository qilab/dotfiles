if 1
  "=======================
  " begin Vundle section
  "=======================
  set nocompatible              " be iMproved, required
  filetype off                  " required

  " set the runtime path to include Vundle and initialize
  set rtp+=~/.vim/bundle/Vundle.vim
  call vundle#begin()
  " alternatively, pass a path where Vundle should install plugins
  "call vundle#begin('~/some/path/here')

  " let Vundle manage Vundle, required
  Plugin 'VundleVim/Vundle.vim'

  " Keep Plugin commands between vundle#begin/end.
  " plugin on GitHub repo
  Plugin 'tpope/vim-fugitive'
  " plugin from http://vim-scripts.org/vim/scripts.html
  Plugin 'L9'
  " Git plugin not hosted on GitHub
  Plugin 'git://git.wincent.com/command-t.git'

  "------------
  " my bundles
  "------------
  Plugin 'gregsexton/gitv'
  Plugin 'quickrun.vim'

  Plugin 'AutoComplPop'

  " Syntax check
  Plugin 'tpope/vim-pathogen'
  Plugin 'scrooloose/syntastic'

  " Syntax highlight
  Plugin 'Markdown'

  "   Web
  Plugin 'slim-template/vim-slim'

  "   scala
  "Plugin 'scala.vim'
  Plugin 'derekwyatt/vim-scala'

  "   JavaScript
  Plugin 'pangloss/vim-javascript'
  Plugin 'jelera/vim-javascript-syntax'

  " Color schemes
  Plugin 'w0ng/vim-hybrid'

  "------------
  " end of my bundles
  "------------

  " All of your Plugins must be added before the following line
  call vundle#end()            " required
  filetype plugin indent on    " required
  " To ignore plugin indent changes, instead use:
  "filetype plugin on
  "
  " Brief help
  " :PluginList       - lists configured plugins
  " :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
  " :PluginSearch foo - searches for foo; append `!` to refresh local cache
  " :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
  "
  " see :h vundle for more details or wiki for FAQ
  " Put your non-Plugin stuff after this line

  syntax on

  " indent
  set autoindent
  set cindent
  set smartindent

  set nocompatible
  set expandtab
  set list
  set number
  set showmatch

  set tabstop=2
  set shiftwidth=2
  set backspace=indent,eol,start

  " Encoding
  set encoding=utf-8
  set fileencodings=utf-8,ucs-bom,iso-2022-jp-3,iso-2022-jp,eucjp-ms,euc-jisx0213,euc-jp,sjis,cp932

  set background=dark
  colorscheme hybrid

  augroup VIMRC
    autocmd!
    " 
    autocmd VimEnter,BufWinEnter,WinEnter * setlocal cursorline
    autocmd WinLeave * setlocal nocursorline
    autocmd InsertEnter * highlight CursorLine ctermbg=0
    autocmd InsertLeave * highlight CursorLine ctermbg=235
    " File types
    "autocmd BufRead,BufNewFile *.scala set filetype=scala

    "autocmd FileType fstab setlocal noexpandtab tabstop=4 shiftwidth=4 softtabstop=4
    autocmd FileType limits setlocal expandtab shiftwidth=4 softtabstop=4
    autocmd FileType pam setlocal noexpandtab shiftwidth=4 softtabstop=4
    " 
    autocmd QuickFixCmdPost vimgrep cwindow
  augroup END
endif
